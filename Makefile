#================= GUROBI =====================================================
VERSION := 1102
FLAGVERSION := 110
OPTS_FLAGS := -g -w -fforce-addr -funroll-loops -frerun-cse-after-loop \
      -finline-limit=100000 -frerun-loop-opt -fno-trapping-math \
			-funsafe-math-optimizations -ffast-math -fno-math-errno \
			-mtune=x86-64
			
ifeq ($(shell uname), Darwin)
        $(info )
        $(info *)
        $(info *        Makefile for MAC OS environment)
        $(info *)
	PLATFORM = mac64
	ifneq ($(RELEASE), 11)
                # The next variable must be used to compile *and* link the obj. codes
		CPPSTDLIB = -stdlib=libc++
	else
                $(info )
                $(info *    Gurobi library is not compatible with code)
                $(info *    generated by clang c++11 in MAC OS.)
                $(info *    Please, verify if it is compatible now.)
                $(info *)
                $(info *    >>>>> Aborted <<<<<)
                $(info *)
                $(error *)
		CPPSTDLIB = -stdlib=libc++ -std=c++11
	endif
	CC      = g++
	#CC_ARGS    = -Wall -m64 -O3 -Wall $(CPPSTDLIB)  -Wno-c++11-extensions
	CC_ARGS    =  -m64  $(OPTS_FLAGS) -w -std=c++11 -D_GLIBCXX_USE_CXX11_ABI=0 
	RELEASE := $(shell uname -r | cut -f 1 -d .)
	CC_LIB   = -lm -lpthread $(CPPSTDLIB)
	GUROBI_DIR = /Library/gurobi$(VERSION)/$(PLATFORM)
else
        $(info )
        $(info *)
        $(info *        Makefile for LINUX environment)
        $(info *)
	PLATFORM = linux64
	CC      = g++
	#CC_ARGS    = -m64 -O2 -Wall -std=c++11
	CC_ARGS    = -m64 $(OPTS_FLAGS) -w -std=c++11 #-D_GLIBCXX_USE_CXX11_ABI=0 
	RELEASE := $(shell uname -r | cut -f 1 -d .)
	CC_LIB   = -lm -lpthread
	GUROBI_DIR = /home/matheus/Programs/gurobi$(VERSION)/$(PLATFORM)
	#GUROBI_DIR = /home/matheusota/programs/gurobi$(VERSION)/$(PLATFORM)
endif
GUROBI_INC = -I$(GUROBI_DIR)/include/
GUROBI_LIB = -L$(GUROBI_DIR)/lib/  -lgurobi_c++ -lgurobi$(FLAGVERSION)  $(CPPSTDLIB)

#================= CVRPSEP =====================================================
CVRPSEPDIR  = CVRPSEP
CVRPSEPSRCDIR = $(CVRPSEPDIR)/source
CVRPSEPOBJDIR = $(CVRPSEPDIR)/obj
CVRPSEPINCDIR  = -I$(CVRPSEPDIR)/include
CVRPSEPLIB  = $(CVRPSEPDIR)/lib/libCVRPSEP.a

CVRPSEPSOURCES = $(wildcard $(CVRPSEPSRCDIR)/*.cpp)
CVRPSEPOBJ = $(patsubst $(CVRPSEPSRCDIR)/%,$(CVRPSEPOBJDIR)/%,$(CVRPSEPSOURCES:.cpp=.o))

#---------------------------------------------
# define includes and libraries

INC = $(GUROBI_INC) $(CVRPSEPINCDIR)
LIB = $(CC_LIB) $(GUROBI_LIB) -pthread 

MYLIBSOURCES = $(wildcard *.cpp)
MYOBJLIB = $(MYLIBSOURCES:.cpp=.o)

EX =  main.cpp
OBJEX = $(EX:.cpp=.o)

EXE = $(EX:.cpp=.e)

all: mylib.a $(OBJEX) $(EXE)

$(CVRPSEPLIB): $(CVRPSEPOBJ) $(CVRPSEPSOURCES)
	ar cru $@ $(CVRPSEPOBJ)

$(CVRPSEPOBJDIR)/%.o: $(CVRPSEPSRCDIR)/%.cpp
	$(CC) $(CC_ARGS) -c $^ $(INC) -o $@
	
mylib.a: $(MYOBJLIB) $(MYLIBSOURCES)
	ar cru $@ $(MYOBJLIB)
	
%.o: %.cpp 
	$(CC) $(CC_ARGS) -c $^ $(INC) -o $@  

%.e: %.o  mylib.a $(CVRPSEPLIB)
	$(CC) $(CC_ARGS) $^ -o $@ $(CVRPSEPLIB) $(LIB) 

.cpp.o:
	$(CC) -c $(CARGS) $< -o $@

clean:
	rm -f $(OBJ) $(MYOBJLIB) $(EXE) $(OBJEX) *~ core mylib.a